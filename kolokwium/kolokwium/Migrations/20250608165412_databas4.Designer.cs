// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using kolokwium.Properties.Data;

#nullable disable

namespace kolokwium.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20250608165412_databas4")]
    partial class databas4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("kolokwium.Properties.Models.Concert", b =>
                {
                    b.Property<int>("ConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConcertId"));

                    b.Property<int>("AvailableTicket")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ConcertId");

                    b.ToTable("concerts");

                    b.HasData(
                        new
                        {
                            ConcertId = 1,
                            AvailableTicket = 0,
                            Date = new DateTime(2025, 6, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Jazz Night"
                        },
                        new
                        {
                            ConcertId = 2,
                            AvailableTicket = 0,
                            Date = new DateTime(2025, 6, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rock Festival"
                        });
                });

            modelBuilder.Entity("kolokwium.Properties.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(100)");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "Anna",
                            LastName = "Kowalska",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Jan",
                            LastName = "Nowak",
                            PhoneNumber = "987654321"
                        });
                });

            modelBuilder.Entity("kolokwium.Properties.Models.PurchasedTicket", b =>
                {
                    b.Property<int>("TicketConcertId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TicketConcertId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Purchased_Ticket");

                    b.HasData(
                        new
                        {
                            TicketConcertId = 1,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2025, 6, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            TicketConcertId = 2,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2025, 6, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            TicketConcertId = 3,
                            CustomerId = 2,
                            PurchaseDate = new DateTime(2025, 6, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("kolokwium.Properties.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TicketId"));

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TicketId");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            SeatNumber = 101,
                            SerialNumber = "TK1"
                        },
                        new
                        {
                            TicketId = 2,
                            SeatNumber = 102,
                            SerialNumber = "TK1"
                        },
                        new
                        {
                            TicketId = 3,
                            SeatNumber = 201,
                            SerialNumber = "TK2"
                        });
                });

            modelBuilder.Entity("kolokwium.Properties.Models.TicketConcert", b =>
                {
                    b.Property<int>("TicketConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TicketConcertId"));

                    b.Property<int>("ConcertId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("TicketId")
                        .HasColumnType("integer");

                    b.HasKey("TicketConcertId");

                    b.HasIndex("ConcertId");

                    b.HasIndex("TicketId");

                    b.ToTable("Ticket_Concert");

                    b.HasData(
                        new
                        {
                            TicketConcertId = 1,
                            ConcertId = 1,
                            Price = 45,
                            TicketId = 1
                        },
                        new
                        {
                            TicketConcertId = 2,
                            ConcertId = 1,
                            Price = 45,
                            TicketId = 2
                        },
                        new
                        {
                            TicketConcertId = 3,
                            ConcertId = 2,
                            Price = 60,
                            TicketId = 3
                        });
                });

            modelBuilder.Entity("kolokwium.Properties.Models.PurchasedTicket", b =>
                {
                    b.HasOne("kolokwium.Properties.Models.Customer", "Customer")
                        .WithMany("PurchasedTickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kolokwium.Properties.Models.TicketConcert", "TicketConcert")
                        .WithMany("PurchasedTickets")
                        .HasForeignKey("TicketConcertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("TicketConcert");
                });

            modelBuilder.Entity("kolokwium.Properties.Models.TicketConcert", b =>
                {
                    b.HasOne("kolokwium.Properties.Models.Concert", "Concert")
                        .WithMany("TicketConcert")
                        .HasForeignKey("ConcertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kolokwium.Properties.Models.Ticket", "Ticket")
                        .WithMany("TicketConcert")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concert");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("kolokwium.Properties.Models.Concert", b =>
                {
                    b.Navigation("TicketConcert");
                });

            modelBuilder.Entity("kolokwium.Properties.Models.Customer", b =>
                {
                    b.Navigation("PurchasedTickets");
                });

            modelBuilder.Entity("kolokwium.Properties.Models.Ticket", b =>
                {
                    b.Navigation("TicketConcert");
                });

            modelBuilder.Entity("kolokwium.Properties.Models.TicketConcert", b =>
                {
                    b.Navigation("PurchasedTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
